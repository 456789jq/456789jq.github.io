<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on aptx</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on aptx</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2020 18:58:35 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Make start-udisk </title>
      <link>http://example.org/posts/first/</link>
      <pubDate>Fri, 21 Feb 2020 18:58:35 +0800</pubDate>
      
      <guid>http://example.org/posts/first/</guid>
      <description>find your U disk use diskutil command；on terminal input diskutil list find your disk and remember the disk number to do;  uninstall your u disk diskutil umountDisk disk# ;input on terminal and it out &amp;quot;Unmount of all volumes on disk4 was successful&amp;quot; like note:this # it is your u disk number  flash to u disk use dd command; very important the disk # number ！！ sudo dd if=os_file_path of=# bs=1m note: the flash process is usually very long and not print out; if it over then ask your &amp;quot;1104+0 records in 1104+0 records out 1157627904 bytes transferred in 550.</description>
    </item>
    
    <item>
      <title>Adb笔记</title>
      <link>http://example.org/posts/adb%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 01 Aug 2019 10:22:21 +0800</pubDate>
      
      <guid>http://example.org/posts/adb%E7%AC%94%E8%AE%B0/</guid>
      <description>abd调试命令 https://developer.android.com/studio/command-line/adb?hl=zh-CN
通过wifi连接到手机 手机需要启动adbd服务 设置端口号 setprop service.adb.tcp.port 5555 重启adbd服务 stop adbd start adbd </description>
    </item>
    
    <item>
      <title>二叉树的遍历</title>
      <link>http://example.org/posts/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/</link>
      <pubDate>Thu, 01 Aug 2019 10:22:21 +0800</pubDate>
      
      <guid>http://example.org/posts/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/</guid>
      <description>二叉树的遍历 二叉树的遍历是指按某种次序访问二叉树上的所有结点，使每个结点都能被访问到并仅访问一次； 由二叉树的定义可知，一棵二叉树由 根 根的左子树和根的右子树 构成。 因此对二叉树的遍历只要按照某种次序执行下列三步，就可以遍历整个二叉树： (1) 访问根结点； (2)遍历根结点的左子树 (3)遍历根结点的右子树 *先理解二叉树构成，子树又是一个二叉树，子树的子树也是二叉树； 以DRL 代表根结点左右子树；则有6种情况： DRL，DLR，LRD，RLD，RDL，LDR； 如果限定左右子树，从左到右；则有三种排序： DLR，LDR，LRD； 按照根结点位置，分别称为：先序（先根结点），中序，后序； DLR：先根结点，然后遍历左子树，再遍历右子树； 其他两个排序依次类推； 遍历确定一棵树 由二叉树的遍历可知，任意一棵二叉树结点的先序，中序，后序遍历都是唯一的。 如何利用二叉树结点的先序遍历和中序遍历，确定这棵二叉树？ 先序序列的第一个结点是该树的根结点； 中序序列，根结点则把该序列分成两个子序列，其中一颗是左子树的中序序列，另外一颗是右子树； </description>
    </item>
    
    <item>
      <title>黑苹果基础知识</title>
      <link>http://example.org/posts/%E9%BB%91%E8%8B%B9%E6%9E%9C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Thu, 01 Aug 2019 10:22:21 +0800</pubDate>
      
      <guid>http://example.org/posts/%E9%BB%91%E8%8B%B9%E6%9E%9C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>黑苹果成功比较重要的几个点 选对硬件 选对硬件 选对硬件   好像说的和废话一样 </description>
    </item>
    
  </channel>
</rss>